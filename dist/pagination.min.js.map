{"version":3,"file":"pagination.min.js","sources":["../src/pagination.js"],"sourcesContent":["function webflowPagination(options) {\n  document.addEventListener('DOMContentLoaded', () => {\n    // デフォルト設定\n    const defaultOptions = {\n      splitTag: 'h3',\n      contentContainerSelector: '.rich-text-content',\n      paginationContainerSelector: '.pagination-container',\n      prevLinkClass: 'pagination-prev',\n      countLinkClass: 'pagination-count',\n      countLinkTextClass: 'pagination-count-text',\n      nextLinkClass: 'pagination-next',\n      prevText: '前へ',\n      nextText: '次へ',\n      currentPageLinkClass: 'active',\n      btnLinkTextClass: 'pagination-btn-text',\n      child: false\n    };\n\n    // オプションをマージ\n    const settings = { ...defaultOptions, ...options };\n\n    // 現在のページ番号を取得\n    const currentPage = new URLSearchParams(window.location.search).get('page') || 1;\n\n    // コンテンツコンテナを取得\n    const contentContainer = document.querySelector(settings.contentContainerSelector);\n\n    if (contentContainer) {\n      // コンテンツを指定されたタグで分割する関数\n      function splitContentByTag(tag, child) {\n        const contentParts = [];\n        let tempContainer = document.createElement('div');\n        let splitElements = [];\n\n        if (child && tag.indexOf(' ') > -1 && tag.split(' ').length === 2 && tag.split(' ')[1]) {\n          const [parentTag, childTag] = tag.split(' ');\n          const parentElements = contentContainer.querySelectorAll(parentTag);\n          Array.from(parentElements).forEach((parentElement) => {\n            const childElements = parentElement.querySelectorAll(childTag);\n            if (childElements.length > 0) {\n              splitElements.push(parentElement);\n            }\n          });\n        } else {\n          splitElements = contentContainer.querySelectorAll(tag);\n        }\n\n        Array.from(splitElements).forEach((splitElement) => {\n          if (tempContainer.children.length) {\n            contentParts.push(tempContainer.innerHTML);\n            tempContainer = document.createElement('div');\n          }\n          tempContainer.appendChild(splitElement.cloneNode(true));\n        });\n        contentParts.push(tempContainer.innerHTML);\n\n        return contentParts;\n      }\n\n      // 分割されたコンテンツを取得\n      const contentParts = splitContentByTag(settings.splitTag, settings.child);\n\n      // 分割されたコンテンツを表示\n      contentContainer.innerHTML = contentParts[currentPage - 1] || '';\n\n      // ページネーション機能を実装\n      function createPagination(totalPages, currentPage) {\n        let paginationHtml = '';\n\n        // 前へのリンクを追加\n        if (currentPage > 1) {\n          paginationHtml += `<a href=\"?page=${currentPage - 1}\" class=\"${settings.prevLinkClass}\"><span class=\"${settings.btnLinkTextClass}\">${settings.prevText}</span></a>`;\n        }\n\n        // ページ番号のリンクを追加\n        for (let i = 1; i <= totalPages; i++) {\n          if (i === parseInt(currentPage)) {\n            paginationHtml += `<p class=\"${settings.countLinkClass} ${settings.currentPageLinkClass}\"><span class=\"${settings.countLinkTextClass}\">${i}</span></p>`;\n          } else {\n            paginationHtml += `<a href=\"?page=${i}\" class=\"${settings.countLinkClass}\"><span class=\"${settings.countLinkTextClass}\">${i}<span></a>`;\n          }\n        }\n\n        // 次へのリンクを追加\n        if (currentPage < totalPages) {\n          paginationHtml += `<a href=\"?page=${currentPage + 1}\" class=\"${settings.nextLinkClass}\"><span class=\"${settings.btnLinkTextClass}\">${settings.nextText}</span></a>`;\n        }\n\n        return paginationHtml;\n      }\n\n\n      // ページネーションHTMLを生成\n      const totalPages = contentParts.length;\n      let paginationHtml = createPagination(totalPages, parseInt(currentPage));\n\n      // ページネーシーションHTMLを挿入\n      const paginationContainer = document.querySelector(settings.paginationContainerSelector);\n      paginationContainer.innerHTML = paginationHtml;\n\n      // クリックイベントを追加\n      paginationContainer.addEventListener('click', (event) => {\n        if (event.target.classList.contains('pagination-ellipsis')) {\n          event.preventDefault();\n          const startPage = parseInt(event.target.getAttribute('data-start-page'));\n          paginationHtml = createPagination(totalPages, parseInt(currentPage), startPage);\n          paginationContainer.innerHTML = paginationHtml;\n        }\n        // 前のページ部分に戻るリンクのクリックイベント\n        if (event.target.classList.contains('pagination-ellipsis-back')) {\n          event.preventDefault();\n          const startPage = parseInt(event.target.getAttribute('data-start-page'));\n          paginationHtml = createPagination(totalPages, parseInt(currentPage), startPage);\n          paginationContainer.innerHTML = paginationHtml;\n        }\n      });\n    }\n  });\n}\n\nwindow.webflowPagination = webflowPagination;"],"names":["window","webflowPagination","options","document","addEventListener","settings","splitTag","contentContainerSelector","paginationContainerSelector","prevLinkClass","countLinkClass","countLinkTextClass","nextLinkClass","prevText","nextText","currentPageLinkClass","btnLinkTextClass","child","currentPage","URLSearchParams","location","search","get","contentContainer","querySelector","splitContentByTag","tag","contentParts","tempContainer","createElement","splitElements","indexOf","split","length","parentTag","childTag","parentElements","querySelectorAll","Array","from","forEach","parentElement","push","splitElement","children","innerHTML","appendChild","cloneNode","createPagination","totalPages","paginationHtml","i","parseInt","paginationContainer","event","target","classList","contains","preventDefault","getAttribute"],"mappings":"yBAwHAA,OAAOC,kBAxHP,SAA2BC,GACzBC,SAASC,iBAAiB,oBAAoB,KAE5C,MAgBMC,EAAW,CAffC,SAAU,KACVC,yBAA0B,qBAC1BC,4BAA6B,wBAC7BC,cAAe,kBACfC,eAAgB,mBAChBC,mBAAoB,wBACpBC,cAAe,kBACfC,SAAU,KACVC,SAAU,KACVC,qBAAsB,SACtBC,iBAAkB,sBAClBC,OAAO,KAIgCf,GAGnCgB,EAAc,IAAIC,gBAAgBnB,OAAOoB,SAASC,QAAQC,IAAI,SAAW,EAGzEC,EAAmBpB,SAASqB,cAAcnB,EAASE,0BAEzD,GAAIgB,EAAkB,CAEpB,SAASE,EAAkBC,EAAKT,GAC9B,MAAMU,EAAe,GACrB,IAAIC,EAAgBzB,SAAS0B,cAAc,OACvCC,EAAgB,GAEpB,GAAIb,GAASS,EAAIK,QAAQ,MAAQ,GAA+B,IAA1BL,EAAIM,MAAM,KAAKC,QAAgBP,EAAIM,MAAM,KAAK,GAAI,CACtF,MAAOE,EAAWC,GAAYT,EAAIM,MAAM,KAClCI,EAAiBb,EAAiBc,iBAAiBH,GACzDI,MAAMC,KAAKH,GAAgBI,SAASC,IACZA,EAAcJ,iBAAiBF,GACnCF,OAAS,GACzBH,EAAcY,KAAKD,EACrB,GAEJ,MACEX,EAAgBP,EAAiBc,iBAAiBX,GAYpD,OATAY,MAAMC,KAAKT,GAAeU,SAASG,IAC7Bf,EAAcgB,SAASX,SACzBN,EAAae,KAAKd,EAAciB,WAChCjB,EAAgBzB,SAAS0B,cAAc,QAEzCD,EAAckB,YAAYH,EAAaI,WAAU,GAAM,IAEzDpB,EAAae,KAAKd,EAAciB,WAEzBlB,CACT,CAGA,MAAMA,EAAeF,EAAkBpB,EAASC,SAAUD,EAASY,OAMnE,SAAS+B,EAAiBC,EAAY/B,GACpC,IAAIgC,EAAiB,GAGjBhC,EAAc,IAChBgC,GAAmB,kBAAiBhC,EAAc,aAAab,EAASI,+BAA+BJ,EAASW,qBAAqBX,EAASQ,uBAIhJ,IAAK,IAAIsC,EAAI,EAAGA,GAAKF,EAAYE,IAC3BA,IAAMC,SAASlC,GACjBgC,GAAmB,aAAY7C,EAASK,kBAAkBL,EAASU,sCAAsCV,EAASM,uBAAuBwC,eAEzID,GAAmB,kBAAiBC,aAAa9C,EAASK,gCAAgCL,EAASM,uBAAuBwC,cAS9H,OAJIjC,EAAc+B,IAChBC,GAAmB,kBAAiBhC,EAAc,aAAab,EAASO,+BAA+BP,EAASW,qBAAqBX,EAASS,uBAGzIoC,CACT,CA1BA3B,EAAiBsB,UAAYlB,EAAaT,EAAc,IAAM,GA8B9D,MAAM+B,EAAatB,EAAaM,OAChC,IAAIiB,EAAiBF,EAAiBC,EAAYG,SAASlC,IAG3D,MAAMmC,EAAsBlD,SAASqB,cAAcnB,EAASG,6BAC5D6C,EAAoBR,UAAYK,EAGhCG,EAAoBjD,iBAAiB,SAAUkD,IACzCA,EAAMC,OAAOC,UAAUC,SAAS,yBAClCH,EAAMI,iBACYN,SAASE,EAAMC,OAAOI,aAAa,oBACrDT,EAAiBF,EAAiBC,EAAYG,SAASlC,IACvDmC,EAAoBR,UAAYK,GAG9BI,EAAMC,OAAOC,UAAUC,SAAS,8BAClCH,EAAMI,iBACYN,SAASE,EAAMC,OAAOI,aAAa,oBACrDT,EAAiBF,EAAiBC,EAAYG,SAASlC,IACvDmC,EAAoBR,UAAYK,EAClC,GAEJ,IAEJ"}