{"version":3,"file":"pagination.min.js","sources":["../src/pagination.js"],"sourcesContent":["function webflowPagination(options) {\n  document.addEventListener('DOMContentLoaded', () => {\n    // デフォルト設定\n    const defaultOptions = {\n      splitTag: 'h3',\n      contentContainerSelector: '.rich-text-content',\n      paginationContainerSelector: '.pagination-container',\n      prevLinkClass: 'pagination-prev',\n      countLinkClass: 'pagination-count',\n      countLinkTextClass: 'pagination-count-text',\n      nextLinkClass: 'pagination-next',\n      prevText: '前へ',\n      nextText: '次へ',\n      currentPageLinkClass: 'active',\n      btnLinkTextClass: 'pagination-btn-text',\n      child: false\n    };\n\n    // オプションをマージ\n    const settings = { ...defaultOptions, ...options };\n\n    // 現在のページ番号を取得\n    const currentPage = new URLSearchParams(window.location.search).get('page') || 1;\n\n    // コンテンツコンテナを取得\n    const contentContainer = document.querySelector(settings.contentContainerSelector);\n\n    if (contentContainer) {\n      // コンテンツを指定されたタグで分割する関数\n      function splitContentByTag(tag, child) {\n        const contentParts = [];\n        let tempContainer = document.createElement('div');\n        let splitElements = contentContainer.querySelectorAll(tag);\n\n        if (splitElements.length === 0) {\n          document.querySelector(settings.paginationContainerSelector).style.display = 'none';\n          return contentParts;\n        }\n\n        Array.from(splitElements).forEach((splitElement) => {\n          if (!child || splitElement.parentElement === contentContainer) {\n            if (tempContainer.children.length) {\n              contentParts.push(tempContainer.innerHTML);\n              tempContainer = document.createElement('div');\n            }\n            tempContainer.appendChild(splitElement.cloneNode(true));\n          }\n        });\n        contentParts.push(tempContainer.innerHTML);\n\n        return contentParts;\n      }\n\n\n      // 分割されたコンテンツを取得\n      const contentParts = splitContentByTag(settings.splitTag, settings.child);\n\n      // 分割されたコンテンツを表示\n      contentContainer.innerHTML = contentParts[currentPage - 1] || '';\n\n      // ページネーション機能を実装\n      function createPagination(totalPages, currentPage) {\n        let paginationHtml = '';\n\n        // 前へのリンクを追加\n        if (currentPage > 1) {\n          paginationHtml += `<a href=\"?page=${currentPage - 1}\" class=\"${settings.prevLinkClass}\"><span class=\"${settings.btnLinkTextClass}\">${settings.prevText}</span></a>`;\n        }\n\n        // ページ番号のリンクを追加\n        for (let i = 1; i <= totalPages; i++) {\n          if (i === parseInt(currentPage)) {\n            paginationHtml += `<p class=\"${settings.countLinkClass} ${settings.currentPageLinkClass}\"><span class=\"${settings.countLinkTextClass}\">${i}</span></p>`;\n          } else {\n            paginationHtml += `<a href=\"?page=${i}\" class=\"${settings.countLinkClass}\"><span class=\"${settings.countLinkTextClass}\">${i}<span></a>`;\n          }\n        }\n\n        // 次へのリンクを追加\n        if (currentPage < totalPages) {\n          paginationHtml += `<a href=\"?page=${currentPage + 1}\" class=\"${settings.nextLinkClass}\"><span class=\"${settings.btnLinkTextClass}\">${settings.nextText}</span></a>`;\n        }\n\n        return paginationHtml;\n      }\n\n\n      // ページネーションHTMLを生成\n      const totalPages = contentParts.length;\n      let paginationHtml = createPagination(totalPages, parseInt(currentPage));\n\n      // ページネーシーションHTMLを挿入\n      const paginationContainer = document.querySelector(settings.paginationContainerSelector);\n      paginationContainer.innerHTML = paginationHtml;\n\n      // クリックイベントを追加\n      paginationContainer.addEventListener('click', (event) => {\n        if (event.target.classList.contains('pagination-ellipsis')) {\n          event.preventDefault();\n          const startPage = parseInt(event.target.getAttribute('data-start-page'));\n          paginationHtml = createPagination(totalPages, parseInt(currentPage), startPage);\n          paginationContainer.innerHTML = paginationHtml;\n        }\n        // 前のページ部分に戻るリンクのクリックイベント\n        if (event.target.classList.contains('pagination-ellipsis-back')) {\n          event.preventDefault();\n          const startPage = parseInt(event.target.getAttribute('data-start-page'));\n          paginationHtml = createPagination(totalPages, parseInt(currentPage), startPage);\n          paginationContainer.innerHTML = paginationHtml;\n        }\n      });\n    }\n  });\n}\n\nwindow.webflowPagination = webflowPagination;"],"names":["window","webflowPagination","options","document","addEventListener","settings","splitTag","contentContainerSelector","paginationContainerSelector","prevLinkClass","countLinkClass","countLinkTextClass","nextLinkClass","prevText","nextText","currentPageLinkClass","btnLinkTextClass","child","currentPage","URLSearchParams","location","search","get","contentContainer","querySelector","splitContentByTag","tag","contentParts","tempContainer","createElement","splitElements","querySelectorAll","length","style","display","Array","from","forEach","splitElement","parentElement","children","push","innerHTML","appendChild","cloneNode","createPagination","totalPages","paginationHtml","i","parseInt","paginationContainer","event","target","classList","contains","preventDefault","getAttribute"],"mappings":"yBAmHAA,OAAOC,kBAnHP,SAA2BC,GACzBC,SAASC,iBAAiB,oBAAoB,KAE5C,MAgBMC,EAAW,CAffC,SAAU,KACVC,yBAA0B,qBAC1BC,4BAA6B,wBAC7BC,cAAe,kBACfC,eAAgB,mBAChBC,mBAAoB,wBACpBC,cAAe,kBACfC,SAAU,KACVC,SAAU,KACVC,qBAAsB,SACtBC,iBAAkB,sBAClBC,OAAO,KAIgCf,GAGnCgB,EAAc,IAAIC,gBAAgBnB,OAAOoB,SAASC,QAAQC,IAAI,SAAW,EAGzEC,EAAmBpB,SAASqB,cAAcnB,EAASE,0BAEzD,GAAIgB,EAAkB,CAEpB,SAASE,EAAkBC,EAAKT,GAC9B,MAAMU,EAAe,GACrB,IAAIC,EAAgBzB,SAAS0B,cAAc,OACvCC,EAAgBP,EAAiBQ,iBAAiBL,GAEtD,OAA6B,IAAzBI,EAAcE,QAChB7B,SAASqB,cAAcnB,EAASG,6BAA6ByB,MAAMC,QAAU,OACtEP,IAGTQ,MAAMC,KAAKN,GAAeO,SAASC,IAC5BrB,GAASqB,EAAaC,gBAAkBhB,IACvCK,EAAcY,SAASR,SACzBL,EAAac,KAAKb,EAAcc,WAChCd,EAAgBzB,SAAS0B,cAAc,QAEzCD,EAAce,YAAYL,EAAaM,WAAU,IACnD,IAEFjB,EAAac,KAAKb,EAAcc,WAEzBf,EACT,CAIA,MAAMA,EAAeF,EAAkBpB,EAASC,SAAUD,EAASY,OAMnE,SAAS4B,EAAiBC,EAAY5B,GACpC,IAAI6B,EAAiB,GAGjB7B,EAAc,IAChB6B,GAAmB,kBAAiB7B,EAAc,aAAab,EAASI,+BAA+BJ,EAASW,qBAAqBX,EAASQ,uBAIhJ,IAAK,IAAImC,EAAI,EAAGA,GAAKF,EAAYE,IAC3BA,IAAMC,SAAS/B,GACjB6B,GAAmB,aAAY1C,EAASK,kBAAkBL,EAASU,sCAAsCV,EAASM,uBAAuBqC,eAEzID,GAAmB,kBAAiBC,aAAa3C,EAASK,gCAAgCL,EAASM,uBAAuBqC,cAS9H,OAJI9B,EAAc4B,IAChBC,GAAmB,kBAAiB7B,EAAc,aAAab,EAASO,+BAA+BP,EAASW,qBAAqBX,EAASS,uBAGzIiC,CACT,CA1BAxB,EAAiBmB,UAAYf,EAAaT,EAAc,IAAM,GA8B9D,MAAM4B,EAAanB,EAAaK,OAChC,IAAIe,EAAiBF,EAAiBC,EAAYG,SAAS/B,IAG3D,MAAMgC,EAAsB/C,SAASqB,cAAcnB,EAASG,6BAC5D0C,EAAoBR,UAAYK,EAGhCG,EAAoB9C,iBAAiB,SAAU+C,IACzCA,EAAMC,OAAOC,UAAUC,SAAS,yBAClCH,EAAMI,iBACYN,SAASE,EAAMC,OAAOI,aAAa,oBACrDT,EAAiBF,EAAiBC,EAAYG,SAAS/B,IACvDgC,EAAoBR,UAAYK,GAG9BI,EAAMC,OAAOC,UAAUC,SAAS,8BAClCH,EAAMI,iBACYN,SAASE,EAAMC,OAAOI,aAAa,oBACrDT,EAAiBF,EAAiBC,EAAYG,SAAS/B,IACvDgC,EAAoBR,UAAYK,EAClC,GAEJ,IAEJ"}