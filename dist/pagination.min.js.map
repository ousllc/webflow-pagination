{"version":3,"file":"pagination.min.js","sources":["../src/pagination.js"],"sourcesContent":["export function webflowPagination(options) {\n  // デフォルト設定\n  const defaultOptions = {\n    splitTag: 'h3',\n    contentContainerSelector: '.rich-text-content',\n    paginationContainerSelector: '.pagination-container',\n  };\n\n  // オプションをマージ\n  const settings = { ...defaultOptions, ...options };\n\n  // 現在のページ番号を取得\n  const currentPage = new URLSearchParams(window.location.search).get('page') || 1;\n\n  // コンテンツコンテナを取得\n  const contentContainer = document.querySelector(settings.contentContainerSelector);\n\n  if (contentContainer) {\n    // コンテンツを指定されたタグで分割する関数\n    function splitContentByTag(tag) {\n      const contentParts = [];\n      let tempContainer = document.createElement('div');\n\n      Array.from(contentContainer.children).forEach((child) => {\n        if (child.tagName.toLowerCase() === tag) {\n          if (tempContainer.children.length) {\n            contentParts.push(tempContainer.innerHTML);\n            tempContainer = document.createElement('div');\n          }\n        }\n        tempContainer.appendChild(child.cloneNode(true));\n      });\n\n      contentParts.push(tempContainer.innerHTML);\n\n      return contentParts;\n    }\n\n    // 分割されたコンテンツを取得\n    const contentParts = splitContentByTag(settings.splitTag);\n\n    // 分割されたコンテンツを表示\n    contentContainer.innerHTML = contentParts[currentPage - 1] || '';\n\n    // ページネーション機能を実装\n    function createPagination(totalPages, currentPage) {\n      let paginationHtml = '';\n\n      // 前へのリンクを追加\n      if (currentPage > 1) {\n        paginationHtml += `<a href=\"?page=${currentPage - 1}\" class=\"pagination-prev\">前へ</a>`;\n      }\n\n      // ページ番号のリンクを追加\n      const startPage = Math.max(1, currentPage - 2);\n      const maxPage = Math.min(totalPages, startPage + 3);\n      for (let i = startPage; i <= maxPage; i++) {\n        if (i === parseInt(currentPage)) {\n          paginationHtml += `<span class=\"pagination-count active\">${i}</span>`;\n        } else {\n          paginationHtml += `<a href=\"?page=${i}\" class=\"pagination-count\">${i}</a>`;\n        }\n      }\n\n      // 前のページ部分に戻るリンクを追加\n      if (startPage > 1) {\n        paginationHtml += `<a href=\"?page=1\" class=\"pagination-count\">1</a>`;\n        paginationHtml += `<a href=\"?page=${startPage - 1}\" class=\"pagination-ellipsis-back\" data-start-page=\"${startPage - 4}\">...</a>`;\n      }\n\n      // 次のページ部分に進むリンクを追加\n      if (totalPages > maxPage) {\n        paginationHtml += `<a href=\"?page=${maxPage + 1}\" class=\"pagination-ellipsis\" data-start-page=\"${startPage + 4}\">...</a>`;\n        paginationHtml += `<a href=\"?page=${totalPages}\" class=\"pagination-count\">${totalPages}</a>`;\n      }\n\n      // 次へのリンクを追加\n      if (currentPage < totalPages) {\n        paginationHtml += `<a href=\"?page=${currentPage + 1}\" class=\"pagination-next\">次へ</a>`;\n      }\n\n      return paginationHtml;\n    }\n\n    // ページネーションHTMLを生成\n    const totalPages = contentParts.length;\n    let paginationHtml = createPagination(totalPages, parseInt(currentPage));\n\n    // ページネーシーションHTMLを挿入\n    const paginationContainer = document.querySelector(settings.paginationContainerSelector);\n    paginationContainer.innerHTML = paginationHtml;\n\n    // クリックイベントを追加\n    paginationContainer.addEventListener('click', (event) => {\n      if (event.target.classList.contains('pagination-ellipsis')) {\n        event.preventDefault();\n        const startPage = parseInt(event.target.getAttribute('data-start-page'));\n        paginationHtml = createPagination(totalPages, parseInt(currentPage), startPage);\n        paginationContainer.innerHTML = paginationHtml;\n      }\n      // 前のページ部分に戻るリンクのクリックイベント\n      if (event.target.classList.contains('pagination-ellipsis-back')) {\n        event.preventDefault();\n        const startPage = parseInt(event.target.getAttribute('data-start-page'));\n        paginationHtml = createPagination(totalPages, parseInt(currentPage), startPage);\n        paginationContainer.innerHTML = paginationHtml;\n      }\n    });\n  }\n}"],"names":["options","settings","splitTag","contentContainerSelector","paginationContainerSelector","currentPage","URLSearchParams","window","location","search","get","contentContainer","document","querySelector","splitContentByTag","tag","contentParts","tempContainer","createElement","Array","from","children","forEach","child","tagName","toLowerCase","length","push","innerHTML","appendChild","cloneNode","createPagination","totalPages","paginationHtml","startPage","Math","max","maxPage","min","i","parseInt","paginationContainer","addEventListener","event","target","classList","contains","preventDefault","getAttribute"],"mappings":"0EAAO,SAA2BA,GAEhC,MAOMC,EAAW,CANfC,SAAU,KACVC,yBAA0B,qBAC1BC,4BAA6B,2BAIUJ,GAGnCK,EAAc,IAAIC,gBAAgBC,OAAOC,SAASC,QAAQC,IAAI,SAAW,EAGzEC,EAAmBC,SAASC,cAAcZ,EAASE,0BAEzD,GAAIQ,EAAkB,CAEpB,SAASG,EAAkBC,GACzB,MAAMC,EAAe,GACrB,IAAIC,EAAgBL,SAASM,cAAc,OAc3C,OAZAC,MAAMC,KAAKT,EAAiBU,UAAUC,SAASC,IACzCA,EAAMC,QAAQC,gBAAkBV,GAC9BE,EAAcI,SAASK,SACzBV,EAAaW,KAAKV,EAAcW,WAChCX,EAAgBL,SAASM,cAAc,QAG3CD,EAAcY,YAAYN,EAAMO,WAAU,GAAM,IAGlDd,EAAaW,KAAKV,EAAcW,WAEzBZ,CACT,CAGA,MAAMA,EAAeF,EAAkBb,EAASC,UAMhD,SAAS6B,EAAiBC,EAAY3B,GACpC,IAAI4B,EAAiB,GAGjB5B,EAAc,IAChB4B,GAAmB,kBAAiB5B,EAAc,qCAIpD,MAAM6B,EAAYC,KAAKC,IAAI,EAAG/B,EAAc,GACtCgC,EAAUF,KAAKG,IAAIN,EAAYE,EAAY,GACjD,IAAK,IAAIK,EAAIL,EAAWK,GAAKF,EAASE,IAChCA,IAAMC,SAASnC,GACjB4B,GAAmB,yCAAwCM,WAE3DN,GAAmB,kBAAiBM,+BAA+BA,QAqBvE,OAhBIL,EAAY,IACdD,GAAmB,mDACnBA,GAAmB,kBAAiBC,EAAY,wDAAwDA,EAAY,cAIlHF,EAAaK,IACfJ,GAAmB,kBAAiBI,EAAU,mDAAmDH,EAAY,aAC7GD,GAAmB,kBAAiBD,+BAAwCA,SAI1E3B,EAAc2B,IAChBC,GAAmB,kBAAiB5B,EAAc,qCAG7C4B,CACT,CAxCAtB,EAAiBiB,UAAYZ,EAAaX,EAAc,IAAM,GA2C9D,MAAM2B,EAAahB,EAAaU,OAChC,IAAIO,EAAiBF,EAAiBC,EAAYQ,SAASnC,IAG3D,MAAMoC,EAAsB7B,SAASC,cAAcZ,EAASG,6BAC5DqC,EAAoBb,UAAYK,EAGhCQ,EAAoBC,iBAAiB,SAAUC,IACzCA,EAAMC,OAAOC,UAAUC,SAAS,yBAClCH,EAAMI,iBACYP,SAASG,EAAMC,OAAOI,aAAa,oBACrDf,EAAiBF,EAAiBC,EAAYQ,SAASnC,IACvDoC,EAAoBb,UAAYK,GAG9BU,EAAMC,OAAOC,UAAUC,SAAS,8BAClCH,EAAMI,iBACYP,SAASG,EAAMC,OAAOI,aAAa,oBACrDf,EAAiBF,EAAiBC,EAAYQ,SAASnC,IACvDoC,EAAoBb,UAAYK,EAClC,GAEJ,CACF"}