{"version":3,"file":"pagination.min.js","sources":["../src/pagination.js"],"sourcesContent":["function webflowPagination(options) {\n  document.addEventListener('DOMContentLoaded', () => {\n    // デフォルト設定\n    const defaultOptions = {\n      splitTag: 'h3',\n      contentContainerSelector: '.rich-text-content',\n      paginationContainerSelector: '.pagination-container',\n      prevLinkClass: 'pagination-prev',\n      countLinkClass: 'pagination-count',\n      countLinkTextClass: 'pagination-count-text',\n      nextLinkClass: 'pagination-next',\n      prevText: '前へ',\n      nextText: '次へ',\n      currentPageLinkClass: 'active',\n      btnLinkTextClass: 'pagination-btn-text',\n      child: false\n    };\n\n    // オプションをマージ\n    const settings = { ...defaultOptions, ...options };\n\n    // 現在のページ番号を取得\n    const currentPage = new URLSearchParams(window.location.search).get('page') || 1;\n\n    // コンテンツコンテナを取得\n    const contentContainer = document.querySelector(settings.contentContainerSelector);\n\n    if (contentContainer) {\n      // コンテンツを指定されたタグで分割する関数\n      function splitContentByTag(tag, child) {\n        const contentParts = [];\n        const originalContent = contentContainer.innerHTML;\n        let tempContainer = document.createElement('div');\n        let splitElements = [];\n\n        if (child && tag.indexOf(' ') > -1 && tag.split(' ').length === 2 && tag.split(' ')[1]) {\n          const [parentTag, childTag] = tag.split(' ');\n          const parentElements = contentContainer.querySelectorAll(parentTag);\n          Array.from(parentElements).forEach((parentElement) => {\n            const childElements = parentElement.querySelectorAll(childTag);\n            if (childElements.length > 0) {\n              splitElements.push(...childElements);\n            }\n          });\n        } else {\n          splitElements = contentContainer.querySelectorAll(tag);\n        }\n\n        splitElements.forEach((splitElement, index) => {\n          if (tempContainer.children.length) {\n            contentParts.push(tempContainer.innerHTML);\n            tempContainer = document.createElement('div');\n          }\n          tempContainer.appendChild(splitElement.cloneNode(true));\n          if (index === splitElements.length - 1) {\n            contentParts.push(tempContainer.innerHTML);\n          }\n        });\n\n        // Restore the original content\n        contentContainer.innerHTML = originalContent;\n\n        return contentParts;\n      }\n\n\n\n      // 分割されたコンテンツを取得\n      const contentParts = splitContentByTag(settings.splitTag, settings.child);\n\n      // 分割されたコンテンツを表示\n      contentContainer.innerHTML = contentParts[currentPage - 1] || '';\n\n      // ページネーション機能を実装\n      function createPagination(totalPages, currentPage) {\n        let paginationHtml = '';\n\n        // 前へのリンクを追加\n        if (currentPage > 1) {\n          paginationHtml += `<a href=\"?page=${currentPage - 1}\" class=\"${settings.prevLinkClass}\"><span class=\"${settings.btnLinkTextClass}\">${settings.prevText}</span></a>`;\n        }\n\n        // ページ番号のリンクを追加\n        for (let i = 1; i <= totalPages; i++) {\n          if (i === parseInt(currentPage)) {\n            paginationHtml += `<p class=\"${settings.countLinkClass} ${settings.currentPageLinkClass}\"><span class=\"${settings.countLinkTextClass}\">${i}</span></p>`;\n          } else {\n            paginationHtml += `<a href=\"?page=${i}\" class=\"${settings.countLinkClass}\"><span class=\"${settings.countLinkTextClass}\">${i}<span></a>`;\n          }\n        }\n\n        // 次へのリンクを追加\n        if (currentPage < totalPages) {\n          paginationHtml += `<a href=\"?page=${currentPage + 1}\" class=\"${settings.nextLinkClass}\"><span class=\"${settings.btnLinkTextClass}\">${settings.nextText}</span></a>`;\n        }\n\n        return paginationHtml;\n      }\n\n\n      // ページネーションHTMLを生成\n      const totalPages = contentParts.length;\n      let paginationHtml = createPagination(totalPages, parseInt(currentPage));\n\n      // ページネーシーションHTMLを挿入\n      const paginationContainer = document.querySelector(settings.paginationContainerSelector);\n      paginationContainer.innerHTML = paginationHtml;\n\n      // クリックイベントを追加\n      paginationContainer.addEventListener('click', (event) => {\n        if (event.target.classList.contains('pagination-ellipsis')) {\n          event.preventDefault();\n          const startPage = parseInt(event.target.getAttribute('data-start-page'));\n          paginationHtml = createPagination(totalPages, parseInt(currentPage), startPage);\n          paginationContainer.innerHTML = paginationHtml;\n        }\n        // 前のページ部分に戻るリンクのクリックイベント\n        if (event.target.classList.contains('pagination-ellipsis-back')) {\n          event.preventDefault();\n          const startPage = parseInt(event.target.getAttribute('data-start-page'));\n          paginationHtml = createPagination(totalPages, parseInt(currentPage), startPage);\n          paginationContainer.innerHTML = paginationHtml;\n        }\n      });\n    }\n  });\n}\n\nwindow.webflowPagination = webflowPagination;"],"names":["window","webflowPagination","options","document","addEventListener","settings","splitTag","contentContainerSelector","paginationContainerSelector","prevLinkClass","countLinkClass","countLinkTextClass","nextLinkClass","prevText","nextText","currentPageLinkClass","btnLinkTextClass","child","currentPage","URLSearchParams","location","search","get","contentContainer","querySelector","splitContentByTag","tag","contentParts","originalContent","innerHTML","tempContainer","createElement","splitElements","indexOf","split","length","parentTag","childTag","parentElements","querySelectorAll","Array","from","forEach","parentElement","childElements","push","splitElement","index","children","appendChild","cloneNode","createPagination","totalPages","paginationHtml","i","parseInt","paginationContainer","event","target","classList","contains","preventDefault","getAttribute"],"mappings":"yBAgIAA,OAAOC,kBAhIP,SAA2BC,GACzBC,SAASC,iBAAiB,oBAAoB,KAE5C,MAgBMC,EAAW,CAffC,SAAU,KACVC,yBAA0B,qBAC1BC,4BAA6B,wBAC7BC,cAAe,kBACfC,eAAgB,mBAChBC,mBAAoB,wBACpBC,cAAe,kBACfC,SAAU,KACVC,SAAU,KACVC,qBAAsB,SACtBC,iBAAkB,sBAClBC,OAAO,KAIgCf,GAGnCgB,EAAc,IAAIC,gBAAgBnB,OAAOoB,SAASC,QAAQC,IAAI,SAAW,EAGzEC,EAAmBpB,SAASqB,cAAcnB,EAASE,0BAEzD,GAAIgB,EAAkB,CAEpB,SAASE,EAAkBC,EAAKT,GAC9B,MAAMU,EAAe,GACfC,EAAkBL,EAAiBM,UACzC,IAAIC,EAAgB3B,SAAS4B,cAAc,OACvCC,EAAgB,GAEpB,GAAIf,GAASS,EAAIO,QAAQ,MAAQ,GAA+B,IAA1BP,EAAIQ,MAAM,KAAKC,QAAgBT,EAAIQ,MAAM,KAAK,GAAI,CACtF,MAAOE,EAAWC,GAAYX,EAAIQ,MAAM,KAClCI,EAAiBf,EAAiBgB,iBAAiBH,GACzDI,MAAMC,KAAKH,GAAgBI,SAASC,IAClC,MAAMC,EAAgBD,EAAcJ,iBAAiBF,GACjDO,EAAcT,OAAS,GACzBH,EAAca,QAAQD,EACxB,GAEJ,MACEZ,EAAgBT,EAAiBgB,iBAAiBb,GAiBpD,OAdAM,EAAcU,SAAQ,CAACI,EAAcC,KAC/BjB,EAAckB,SAASb,SACzBR,EAAakB,KAAKf,EAAcD,WAChCC,EAAgB3B,SAAS4B,cAAc,QAEzCD,EAAcmB,YAAYH,EAAaI,WAAU,IAC7CH,IAAUf,EAAcG,OAAS,GACnCR,EAAakB,KAAKf,EAAcD,UAClC,IAIFN,EAAiBM,UAAYD,EAEtBD,CACT,CAKA,MAAMA,EAAeF,EAAkBpB,EAASC,SAAUD,EAASY,OAMnE,SAASkC,EAAiBC,EAAYlC,GACpC,IAAImC,EAAiB,GAGjBnC,EAAc,IAChBmC,GAAmB,kBAAiBnC,EAAc,aAAab,EAASI,+BAA+BJ,EAASW,qBAAqBX,EAASQ,uBAIhJ,IAAK,IAAIyC,EAAI,EAAGA,GAAKF,EAAYE,IAC3BA,IAAMC,SAASrC,GACjBmC,GAAmB,aAAYhD,EAASK,kBAAkBL,EAASU,sCAAsCV,EAASM,uBAAuB2C,eAEzID,GAAmB,kBAAiBC,aAAajD,EAASK,gCAAgCL,EAASM,uBAAuB2C,cAS9H,OAJIpC,EAAckC,IAChBC,GAAmB,kBAAiBnC,EAAc,aAAab,EAASO,+BAA+BP,EAASW,qBAAqBX,EAASS,uBAGzIuC,CACT,CA1BA9B,EAAiBM,UAAYF,EAAaT,EAAc,IAAM,GA8B9D,MAAMkC,EAAazB,EAAaQ,OAChC,IAAIkB,EAAiBF,EAAiBC,EAAYG,SAASrC,IAG3D,MAAMsC,EAAsBrD,SAASqB,cAAcnB,EAASG,6BAC5DgD,EAAoB3B,UAAYwB,EAGhCG,EAAoBpD,iBAAiB,SAAUqD,IACzCA,EAAMC,OAAOC,UAAUC,SAAS,yBAClCH,EAAMI,iBACYN,SAASE,EAAMC,OAAOI,aAAa,oBACrDT,EAAiBF,EAAiBC,EAAYG,SAASrC,IACvDsC,EAAoB3B,UAAYwB,GAG9BI,EAAMC,OAAOC,UAAUC,SAAS,8BAClCH,EAAMI,iBACYN,SAASE,EAAMC,OAAOI,aAAa,oBACrDT,EAAiBF,EAAiBC,EAAYG,SAASrC,IACvDsC,EAAoB3B,UAAYwB,EAClC,GAEJ,IAEJ"}